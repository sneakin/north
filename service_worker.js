(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
"use strict";var REQUIRED_SCRIPTS=[];if("undefined"==typeof global){function require(r){REQUIRED_SCRIPTS.push(r)}}function equals(r,e){if(typeof r!=typeof e)return!1;if(null!=r&&"object"==typeof r||null!=e&&"object"==typeof e){if(r instanceof Array&&e instanceof Array){if(r.length!=e.length)return!1;for(var t=0;t<r.length;t++)if(!equals(r[t],e[t]))return!1;return!0}if(r[Symbol.iterator]&&e[Symbol.iterator]){for(var t of r)if(!equals(r[t],e[t]))return!1;for(var t of e)if(!equals(r[t],e[t]))return!1;return!0}if("object"==typeof r&&"object"==typeof e){for(var t in r)if(!equals(r[t],e[t]))return!1;for(var t in e)if(!equals(r[t],e[t]))return!1;return!0}return null==r&&null==e}return r==e}function to_method(r){var e;return"string"==typeof r&&(e=r,r=function(r){return r[e]()}),r}function to_kv_method(r){var e;return"string"==typeof r&&(e=r,r=function(r,t){return t[e]()}),r}function merge_options(r,e){var t={};for(var n in r)t[n]=r[n];for(var n in e)t[n]=e[n];return t}function map_each(r,e){var t={};for(var n in e=to_kv_method(e),r)t[n]=e(n,r[n]);return t}function map_each_n(r,e){var t=[];e=to_kv_method(e);for(var n=0;n<r.length;n++)t[n]=e(r[n],n);return t}function map_each_key(r,e){var t={};for(var n in e=to_kv_method(e),r)t[e(n,r[n])]=r[n];return t}function reject_if(r,e){var t=[];for(var n in e=to_kv_method(e),r)0==e(r[n],n)&&(t[n]=r[n]);return t}function reject_n_if(r,e){var t=[];e=to_kv_method(e);for(var n=0;n<r.length;n++)0==e(r[n],n)&&t.push(r[n]);return t}function remove_value(r,e){var t=r.indexOf(e);return remove_n(r,t)}function remove_n(r,e){return r.splice(0,e-1).concat(r.splice(e+1))}function flatten(r,e){null==e&&(e=[]);for(var t=0;t<r.length;t++)"object"==typeof r[t]?flatten(r[t],e):e.push(r[t]);return e}function flattenDeep(r){return r.reduce((r,e)=>Array.isArray(e)?r.concat(flattenDeep(e)):r.concat(e),[])}function n_times(r,e){var t=new Array(r);e=to_method(e);for(var n=0;n<r;n++)t[n]=e(n);return t}function uniques(r){var e={};for(var t in r)e[r[t]]=r[t];var n=[];for(var t in e)n.push(e[t]);return n}function to_hexdump(r){return flattenDeep(map_each_n(r,function(r,e){return r.toString(16).padStart(2,"0")})).join(" ")}function from_hexdump(r){return r.split(/\s+/).map(r=>parseInt(r,16))}function string_to_hexdump(r){return to_hexdump(r.split("").map(r=>r.charCodeAt(0)))}function string_from_hexdump(r){return from_hexdump(r).reduce((r,e)=>r+=String.fromCharCode(e),"")}const Exports={map_each:map_each,map_each_n:map_each_n,n_times:n_times,equals:equals,merge_options:merge_options,flattenDeep:flattenDeep,to_hexdump:to_hexdump,from_hexdump:from_hexdump,string_to_hexdump:string_to_hexdump,string_from_hexdump:string_from_hexdump};"undefined"!=typeof module&&(module.exports=Exports),"undefined"!=typeof window&&(window.util=Exports);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],2:[function(require,module,exports){
const moreutil=require("more_util");function clear_old_cache(e,r){caches.has(e).then(()=>{caches.delete(e).then(()=>{console.log("Deleted old cache",e)})})}function cache_manifest(e,r){caches.open(e).then(e=>e.addAll(r)).catch(e=>{console.log("Offline Cacher failed to cache",e,e.code,e.message,e.name)})}function cache_resource(e,r,c){var o=r.clone();caches.open(c.version).then(r=>{r.put(e,o).then(()=>{console.log("Cached",e)}).catch(e=>{console.log("Failed caching",e,e.code,e.message,e.name)})})}function fetch_from_cache(e,r){return caches.match(e).then(e=>void 0!==e?e:r.error_page(404,"Not found")).catch(e=>r.error_page(e.code,e.message))}function fetch_first(e,r){return e.respondWith(fetch(e.request).then(c=>(cache_resource(e.request,c,r),c)).catch(c=>(console.log("Offline Cacher error ",c),fetch_from_cache(e.request,r))))}function error_page(e,r){return new Response("Error: "+e+": "+r,{status:e,statusText:r})}const Worker={fetch_first:fetch_first,error_page:error_page};Worker.Defaults={fetcher:Worker.fetch_first,error_page:Worker.error_page},Worker.install=function(e,r){(r=moreutil.merge_options(Worker.Defaults,r)).manifest&&e.addEventListener("install",e=>{console.log("Offline Cacher installing"),e.waitUntil(cache_manifest(r.version,r.manifest))}),r.old_version&&e.addEventListener("activate",e=>{console.log("Offline Cacher activated"),clear_old_cache(r.old_version,r.version)}),r.fetcher&&e.addEventListener("fetch",e=>(console.log("Offline Cacher fetching",e.request),r.fetcher(e,r)))},"undefined"!=typeof module&&(module.exports=Worker);

},{"more_util":1}],3:[function(require,module,exports){
const moreutil=require("more_util"),Cacher=require("vm/service_worker/offline_cacher");function Worker(){}Worker.Defaults={cacher:{fetcher:Cacher.fetch_first}},Worker.install=function(e,r){r=moreutil.merge_options(Worker.Defaults,r),Cacher.install(e,r.cacher),e.addEventListener("install",e=>{console.log("VM worker installing")}),e.addEventListener("activate",e=>{console.log("VM worker activated")})},"undefined"!=typeof module&&(module.exports=Worker);

},{"more_util":1,"vm/service_worker/offline_cacher":2}],4:[function(require,module,exports){
const VMWorker=require("vm/service_worker/worker"),OldVersion="v0",Version="v1",manifest=["./index.html","./index.js","./ipfs.js","./index.css","./xterm.css","./unscii-8.ttf","./north-stage0.bin","./north-stage0-min.bin","./north-stage1.bin","./north-stage1-min.bin"];function error_page(e,r){return new Response("Error: "+e+": "+r,{status:e,statusText:r})}VMWorker.install(self,{cacher:{version:"v1",old_version:"v0",manifest:manifest,fetch_error:error_page}}),self.addEventListener("install",e=>{console.log("Service worker installing")}),self.addEventListener("activate",e=>{console.log("Service worker activated")}),self.addEventListener("message",e=>{console.log("Service worker received message",e)});

},{"vm/service_worker/worker":3}]},{},[4]);
